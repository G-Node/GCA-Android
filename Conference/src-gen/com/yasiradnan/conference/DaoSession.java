package com.yasiradnan.conference;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import com.yasiradnan.conference.AbstractsItem;
import com.yasiradnan.conference.AbstractKeyWords;
import com.yasiradnan.conference.AbstractAuthor;
import com.yasiradnan.conference.AbstractAffiliation;
import com.yasiradnan.conference.AbsAffiliationName;
import com.yasiradnan.conference.AuthorsAbstract;
import com.yasiradnan.conference.AbstractAffiliateName;
import com.yasiradnan.conference.AuthorsAffiliate;

import com.yasiradnan.conference.AbstractsItemDao;
import com.yasiradnan.conference.AbstractKeyWordsDao;
import com.yasiradnan.conference.AbstractAuthorDao;
import com.yasiradnan.conference.AbstractAffiliationDao;
import com.yasiradnan.conference.AbsAffiliationNameDao;
import com.yasiradnan.conference.AuthorsAbstractDao;
import com.yasiradnan.conference.AbstractAffiliateNameDao;
import com.yasiradnan.conference.AuthorsAffiliateDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig abstractsItemDaoConfig;
    private final DaoConfig abstractKeyWordsDaoConfig;
    private final DaoConfig abstractAuthorDaoConfig;
    private final DaoConfig abstractAffiliationDaoConfig;
    private final DaoConfig absAffiliationNameDaoConfig;
    private final DaoConfig authorsAbstractDaoConfig;
    private final DaoConfig abstractAffiliateNameDaoConfig;
    private final DaoConfig authorsAffiliateDaoConfig;

    private final AbstractsItemDao abstractsItemDao;
    private final AbstractKeyWordsDao abstractKeyWordsDao;
    private final AbstractAuthorDao abstractAuthorDao;
    private final AbstractAffiliationDao abstractAffiliationDao;
    private final AbsAffiliationNameDao absAffiliationNameDao;
    private final AuthorsAbstractDao authorsAbstractDao;
    private final AbstractAffiliateNameDao abstractAffiliateNameDao;
    private final AuthorsAffiliateDao authorsAffiliateDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        abstractsItemDaoConfig = daoConfigMap.get(AbstractsItemDao.class).clone();
        abstractsItemDaoConfig.initIdentityScope(type);

        abstractKeyWordsDaoConfig = daoConfigMap.get(AbstractKeyWordsDao.class).clone();
        abstractKeyWordsDaoConfig.initIdentityScope(type);

        abstractAuthorDaoConfig = daoConfigMap.get(AbstractAuthorDao.class).clone();
        abstractAuthorDaoConfig.initIdentityScope(type);

        abstractAffiliationDaoConfig = daoConfigMap.get(AbstractAffiliationDao.class).clone();
        abstractAffiliationDaoConfig.initIdentityScope(type);

        absAffiliationNameDaoConfig = daoConfigMap.get(AbsAffiliationNameDao.class).clone();
        absAffiliationNameDaoConfig.initIdentityScope(type);

        authorsAbstractDaoConfig = daoConfigMap.get(AuthorsAbstractDao.class).clone();
        authorsAbstractDaoConfig.initIdentityScope(type);

        abstractAffiliateNameDaoConfig = daoConfigMap.get(AbstractAffiliateNameDao.class).clone();
        abstractAffiliateNameDaoConfig.initIdentityScope(type);

        authorsAffiliateDaoConfig = daoConfigMap.get(AuthorsAffiliateDao.class).clone();
        authorsAffiliateDaoConfig.initIdentityScope(type);

        abstractsItemDao = new AbstractsItemDao(abstractsItemDaoConfig, this);
        abstractKeyWordsDao = new AbstractKeyWordsDao(abstractKeyWordsDaoConfig, this);
        abstractAuthorDao = new AbstractAuthorDao(abstractAuthorDaoConfig, this);
        abstractAffiliationDao = new AbstractAffiliationDao(abstractAffiliationDaoConfig, this);
        absAffiliationNameDao = new AbsAffiliationNameDao(absAffiliationNameDaoConfig, this);
        authorsAbstractDao = new AuthorsAbstractDao(authorsAbstractDaoConfig, this);
        abstractAffiliateNameDao = new AbstractAffiliateNameDao(abstractAffiliateNameDaoConfig, this);
        authorsAffiliateDao = new AuthorsAffiliateDao(authorsAffiliateDaoConfig, this);

        registerDao(AbstractsItem.class, abstractsItemDao);
        registerDao(AbstractKeyWords.class, abstractKeyWordsDao);
        registerDao(AbstractAuthor.class, abstractAuthorDao);
        registerDao(AbstractAffiliation.class, abstractAffiliationDao);
        registerDao(AbsAffiliationName.class, absAffiliationNameDao);
        registerDao(AuthorsAbstract.class, authorsAbstractDao);
        registerDao(AbstractAffiliateName.class, abstractAffiliateNameDao);
        registerDao(AuthorsAffiliate.class, authorsAffiliateDao);
    }
    
    public void clear() {
        abstractsItemDaoConfig.getIdentityScope().clear();
        abstractKeyWordsDaoConfig.getIdentityScope().clear();
        abstractAuthorDaoConfig.getIdentityScope().clear();
        abstractAffiliationDaoConfig.getIdentityScope().clear();
        absAffiliationNameDaoConfig.getIdentityScope().clear();
        authorsAbstractDaoConfig.getIdentityScope().clear();
        abstractAffiliateNameDaoConfig.getIdentityScope().clear();
        authorsAffiliateDaoConfig.getIdentityScope().clear();
    }

    public AbstractsItemDao getAbstractsItemDao() {
        return abstractsItemDao;
    }

    public AbstractKeyWordsDao getAbstractKeyWordsDao() {
        return abstractKeyWordsDao;
    }

    public AbstractAuthorDao getAbstractAuthorDao() {
        return abstractAuthorDao;
    }

    public AbstractAffiliationDao getAbstractAffiliationDao() {
        return abstractAffiliationDao;
    }

    public AbsAffiliationNameDao getAbsAffiliationNameDao() {
        return absAffiliationNameDao;
    }

    public AuthorsAbstractDao getAuthorsAbstractDao() {
        return authorsAbstractDao;
    }

    public AbstractAffiliateNameDao getAbstractAffiliateNameDao() {
        return abstractAffiliateNameDao;
    }

    public AuthorsAffiliateDao getAuthorsAffiliateDao() {
        return authorsAffiliateDao;
    }

}
